<snippet>
	<content><![CDATA[

# Debian and derivates /etc/network/interfaces example, statis IP and dhcp
# change the IP/NET gateway and dns with yours

# NOTE: requiere root access

# stop the service
systemctl stop networking.service

# load kernel module for VLAN
modprobe 8021q

# install vlan package
apt-get install vlan
apt-get install iptables-persistent

# save iptables rules if any
iptables-save > /etc/network/run-iptables.ip4

cat <<'EOF' > /etc/network/interfaces
# The loopback network interface
auto lo
iface lo inet loopback
 
# The primary network interface
auto enp0s3
iface enp0s3 inet static
 address 192.168.1.10
 netmask 255.255.255.0
 gateway 192.168.1.1
 broadcast 192.168.1.255

 dns-domain sweet.home
 dns-nameservers 192.168.2.254

 up route add -net 192.168.1.0 netmask 255.255.255.0 gw 192.168.1.1

 iptables-restore < /etc/network/run-iptables.ip4

auto enp0s8
iface enp0s8 inet dhcp

iface enp0s3:1 inet static
  address 192.168.1.20
  network 192.168.1.0
  netmask 255.255.255.0


auto br0
iface br0 inet static
  address 10.10.0.15/24
  gateway 10.10.0.1
  bridge_ports enp0s3 enp0s8
  up /usr/sbin/brctl stp br0 on

EOF

# restart the service with new configuration
systemctl restart networking.service
systemctl restart iptables


]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>Debian-intefaces</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
	<description>Debian and sons interfaces conf file sample</description>
</snippet>
